@page "/"
@inject ChatbotClient.QueryProcessor queryProcessor
<div class="mud-theme-info py-4 px-6 mx-4 rounded-xl">
    <MudText Align="Align.Left">
        This is <b>Sojee</b>, Chiapas EDI's AI chatbot.  Please do not rely on the output for any purpose as it is prone to hallucination.
        For clarification, reach out to us directly at <a href="mailto:support@chiapas-edi.org">support@chiapas-edi.org</a>, or provide your Email address in a question.  Please allow Sojee up to a minute for answers to your questions.  If your Sojee doesn't answer your question, try phrasing it a different way.<br />
        <u>Some sample questions</u>:<br />
        1. What are the licensing costs for SERENEDI Package A?<br />
        2. What are the HIPAA specifications supported by SERENEDI?<br />
        3. What are the two file-based triggers in SERENEDI?<br />
        <u>Please note,</u> for the following topic, multiturn conversations are not supported - please reload the window for each individual question:<br />
        4. Give me the syntax and usage of the SERENEDI cmdlet sapi-AddMsg.<br />
    </MudText>
</div>

@if (convo != null && convo.convoEntries != null && convo.convoEntries.Count > 0)
{
    @foreach (var item in convo.convoEntries)
    {
        <MudText Color="Color.Dark">@item.Key.ToString("[HH:mm:ss]")</MudText>
        string[] qLines = @item.Value.Item1.Split("\n");
        bool codeBlock = false;
        foreach (string qLine in qLines)
        {
            if (qLine.StartsWith("```"))
                codeBlock = !codeBlock;

            if (!codeBlock)
            {
                <MudText Color="Color.Primary" Typo="Typo.h5">@qLine</MudText>
            }
            else
            {
                <MudText Color="Color.Default" Typo="Typo.h5"><code>@qLine</code></MudText>
            }
        }

        string[] aLines = @item.Value.Item2.Split("\n");
        codeBlock = false;
        foreach (string aLine in aLines)
        {
            string newaLine = aLine;
            if (aLine.StartsWith("```"))
            {
                codeBlock = !codeBlock;
                newaLine = newaLine.Replace("```", "");
            }

            if (!codeBlock)
            {
                <MudText Color="Color.Surface" Typo="Typo.h5">@newaLine</MudText>
            }
            else
            {
                <MudText Color="Color.Default" Typo="Typo.h5"><code style="color:darkslateblue">@newaLine</code></MudText>
            }
        }
    }
}

@if (isProgressHidden)
{
    <div class="py-4 px-6 mx-4 rounded-xl">
        <MudTextField T="string" @bind-Text="@inputPrompt" />
    </div>
}

<MudButton OnClick="SubmitClickedAsync" FullWidth="true" Variant="Variant.Filled" Color="Color.Primary" hidden="@(!isProgressHidden)">SUBMIT</MudButton>
<MudProgressCircular Color="Color.Primary" Size="Size.Small" Indeterminate="true" hidden="@isProgressHidden" />

@code {
    public bool isProgressHidden = true;    
    public string inputPrompt = "";
    public string outputText = "";
    ChatbotClient.Conversation convo =  new ChatbotClient.Conversation();

    private async Task SubmitClickedAsync(MouseEventArgs args)
    {
        isProgressHidden = false;
        convo.convoEntries.Add(DateTime.Now, (inputPrompt, ""));
        convo._botParams = queryProcessor.cbParams;
        var task1 = queryProcessor.SubmitQuery(convo);
        convo = await task1;
        isProgressHidden = true;
        inputPrompt = "";
    }

}
