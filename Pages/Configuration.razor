@page "/Config"
@inject ChatBotParameters cbParams

<h3>Configuration</h3>

<MudPopover Open="@_isOpen" Fixed="true" Class="px-4 pt-4">
    <div class="d-flex flex-column">
        <MudText>@_popupText</MudText>
        <MudButton OnClick="@ToggleOpen" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Close</MudButton>
    </div>
</MudPopover>

<MudButtonGroup Color="Color.Primary">
    <MudButton OnClick="@(e=> { cbParams = ChatBotParameters.LoadFromDisk(); cbParams.Regen(); _popupText = "Config Loaded.."; ToggleOpen();})">LOAD</MudButton>
    <MudButton OnClick="@(e=> { cbParams.SaveConfig(); _popupText = "Config Saved."; ToggleOpen();})">SAVE</MudButton>
</MudButtonGroup>

<MudTextField T="string" @bind-Value="@cbParams.basePath" Label="Configuration Path" />
<MudTextField T="string" @bind-Value="@cbParams.questionPrompt" Label="Question Prompt" />
<MudTextField T="string" @bind-Value="@cbParams.answerPrompt" Label="Answer Prompt" />
<MudTextField T="string" @bind-Value="@cbParams.emptyResponse" Label="Off-topic Response" />

<p>
These are the currently configured topics for the Sojee Chatbot.  The topic 'initial' is required, and contains prompting to the AI inferencing backend to classify questions to one of the topics.  Each topic will be backed by a text file in the application
folder that contains no more than 8192 tokens - this can be counted using the 'Count Tokens' button from the prompt window in text-generation-webui.
</p>

<MudTabs Rounded="true">
    @foreach (var item in cbParams.topics)
    {
        <MudTabPanel Text="@item">
        <MudText>@(FetchItem(item))</MudText>
        <MudButton @onclick="@(e=> { cbParams.topics.Remove(item); cbParams.Regen();})">Remove</MudButton>
        </MudTabPanel>
    }
</MudTabs>

<MudTextField T="string" Lines="1" @bind-Text="@newItem" />
<MudButton @onclick="@(e=> { cbParams.topics.Add(newItem); cbParams.Regen(); })">Add Topic</MudButton>

@code {
    public string newItem { get; set; }

    public bool _isOpen;
    public string _popupText { get; set; }

    public void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }
    public string FetchItem(string item)
    {
        if (cbParams.dctTopics.ContainsKey(item))
            return cbParams.dctTopics[item].Length.ToString() + " bytes prompt file loaded";
        else
            return $"prompt_{item}.txt file not found in application folder";
    }
}